package com.daphne.es.crm.activities.entity;
// Generated 2015-9-15 17:04:38 by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Fetch;
import org.hibernate.annotations.FetchMode;
import org.springframework.format.annotation.DateTimeFormat;

import com.daphne.es.common.plugin.entity.TransientTreeable;
import com.daphne.es.common.plugin.entity.Treeable;
import com.google.common.collect.Lists;

/**
 * CrmActivitySteps generated by hbm2java
 */
@Entity
@Table(name = "CRM_ACTIVITY_STEPS", schema = "MAS")
public class CrmActivitySteps extends TransientTreeable<BigDecimal> implements Treeable<BigDecimal> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private BigDecimal casId;

	private String title;

	// private BigDecimal caId;

	private Date startDate;

	private Date endDate;

	private BigDecimal status;

	private BigDecimal stepType;

	private String remark;

	private Date createDate;

	private String createDt;

	private Date updateDate;

	private String updateDt;

	private CrmActivityVipScripts crmActivityVipScripts;

	////////////////////////////////////////////////////////////////////////////////////

	private CrmActivity crmActivity;

	private List<CrmActivityAd> CrmActivityAds;

	private List<CrmActivityPromotion> crmActivityPromotions;

	private List<CrmActivityHpoint> crmActivityHpoints;

	private List<CrmActivityActivitysManager> crmActivityActivitysManagers;
	
	private List<CrmActivityCoupon> crmActivityCoupons;

	public CrmActivitySteps() {
	}

	
	public CrmActivitySteps(BigDecimal casId) {
		this.casId = casId;
	}

	public CrmActivitySteps(BigDecimal casId, String title, Date startDate, Date endDate, BigDecimal status,
			BigDecimal stepType, String remark, Date createDate, String createDt, Date updateDate, String updateDt) {
		super();
		this.casId = casId;
		this.title = title;
		this.startDate = startDate;
		this.endDate = endDate;
		this.status = status;
		this.stepType = stepType;
		this.remark = remark;
		this.createDate = createDate;
		this.createDt = createDt;
		this.updateDate = updateDate;
		this.updateDt = updateDt;
	}

	/**
	 * 树枝节点默认图标 如果没有默认 空即可
	 *
	 * @return
	 */
	@Transient
	@Override
	public String getBranchDefaultIcon() {
		return "ztree_folder";
	}

	@DateTimeFormat(pattern = "yyyy-MM-dd")
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATE_DATE", length = 7)
	public Date getCreateDate() {
		return this.createDate;
	}

	@Column(name = "CREATE_DT", length = 30)
	public String getCreateDt() {
		return this.createDt;
	}

	@ManyToOne(cascade = CascadeType.ALL, fetch = FetchType.EAGER)
	@JoinColumn(name = "CA_ID", referencedColumnName = "CA_ID") //// 在CrmActivitySteps中，添加一个外键																//// ""
	public CrmActivity getCrmActivity() {
		return crmActivity;
	}
	@OneToMany(mappedBy = "crmActivitySteps", cascade = CascadeType.ALL, fetch = FetchType.LAZY, targetEntity = CrmActivityCoupon.class)
	public List<CrmActivityCoupon> getCrmActivityCoupons() {
		
		if (crmActivityCoupons == null) {
			crmActivityCoupons = Lists.newArrayList();
		}
		return crmActivityCoupons;
	}

	
	public void setCrmActivityCoupons(List<CrmActivityCoupon> crmActivityCoupons) {
		this.crmActivityCoupons = crmActivityCoupons;
	}


	@OneToMany(cascade = CascadeType.ALL, mappedBy = "crmActivitySteps", fetch = FetchType.LAZY, targetEntity = CrmActivityActivitysManager.class)
	public List<CrmActivityActivitysManager> getCrmActivityActivitysManagers() {
		if (crmActivityActivitysManagers == null) {
			crmActivityActivitysManagers = Lists.newArrayList();
		}
		return crmActivityActivitysManagers;
	}

	/*
	 * @Column(name = "CA_ID", precision = 22, scale = 0) public BigDecimal
	 * getCaId() { return this.caId; }
	 * 
	 * public void setCaId(BigDecimal caId) { this.caId = caId; }
	 */

	@OneToMany(cascade = CascadeType.ALL, mappedBy = "crmActivitySteps", fetch = FetchType.LAZY, targetEntity = CrmActivityAd.class)
	public List<CrmActivityAd> getCrmActivityAds() {
		if (CrmActivityAds == null) {
			CrmActivityAds = Lists.newArrayList();
		}
		return CrmActivityAds;
	}

	@OneToMany(cascade = CascadeType.ALL, mappedBy = "crmActivitySteps", fetch = FetchType.LAZY, targetEntity = CrmActivityHpoint.class)
	public List<CrmActivityHpoint> getCrmActivityHpoints() {
		if (crmActivityHpoints == null) {
			crmActivityHpoints = Lists.newArrayList();
		}
		return crmActivityHpoints;
	}

	@OneToMany(cascade = CascadeType.ALL, mappedBy = "crmActivitySteps", fetch = FetchType.LAZY, targetEntity = CrmActivityPromotion.class)
	public List<CrmActivityPromotion> getCrmActivityPromotions() {
		if (crmActivityPromotions == null) {
			crmActivityPromotions = Lists.newArrayList();
		}
		return crmActivityPromotions;
	}

	@OneToOne(cascade = CascadeType.ALL, mappedBy = "crmActivitySteps") // mappedby关系被维护端
																		// 没有权利更新外键
																		// true可允许为空
	public CrmActivityVipScripts getCrmActivityVipScripts() {

		return crmActivityVipScripts;
	}

	@DateTimeFormat(pattern = "yyyy-MM-dd")
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "END_DATE", length = 7)
	public Date getEndDate() {
		return this.endDate;
	}

	

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq")
	@SequenceGenerator(name = "seq", sequenceName = "CRM_ACTIVITY_STEPS_S", allocationSize = 1)
	@Column(name = "CAS_ID", unique = true, nullable = false, precision = 22, scale = 0)
	@Override
	public BigDecimal getId() {
		return this.casId;
	}

	

	@Column(name = "REMARK", length = 500)
	public String getRemark() {
		return this.remark;
	}


	@DateTimeFormat(pattern = "yyyy-MM-dd")
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "START_DATE", length = 7)
	public Date getStartDate() {
		return this.startDate;
	}



	@Column(name = "STATUS", precision = 22, scale = 0)
	public BigDecimal getStatus() {
		return this.status;
	}

	@Column(name = "STEP_TYPE", precision = 22, scale = 0)
	public BigDecimal getStepType() {
		return this.stepType;
	}

	@Column(name = "TITLE", length = 200)
	public String getTitle() {
		return this.title;
	}

	@DateTimeFormat(pattern = "yyyy-MM-dd")
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATE_DATE", length = 7)
	public Date getUpdateDate() {
		return this.updateDate;
	}



	@Column(name = "UPDATE_DT", length = 30)
	public String getUpdateDt() {
		return this.updateDt;
	}

	@Override
	public String makeSelfAsNewParentIds() {
		return getParentIds() + getId() + getSeparator();
	}

	
	

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	public void setCreateDt(String createDt) {
		this.createDt = createDt;
	}

	public void setCrmActivity(CrmActivity crmActivity) {
		this.crmActivity = crmActivity;
	}
	////////////////////////////////////////////////////////////////////////////////////

	public void setCrmActivityActivitysManagers(List<CrmActivityActivitysManager> crmActivityActivitysManagers) {
		this.crmActivityActivitysManagers = crmActivityActivitysManagers;
	}

	public void setCrmActivityAds(List<CrmActivityAd> crmActivityAds) {
		CrmActivityAds = crmActivityAds;
	}

	public void setCrmActivityHpoints(List<CrmActivityHpoint> crmActivityHpoints) {
		this.crmActivityHpoints = crmActivityHpoints;
	}

	public void setCrmActivityPromotions(List<CrmActivityPromotion> crmActivityPromotions) {
		this.crmActivityPromotions = crmActivityPromotions;
	}

	public void setCrmActivityVipScripts(CrmActivityVipScripts crmActivityVipScripts) {
		this.crmActivityVipScripts = crmActivityVipScripts;
	}
	////////////////////////////////////////////////////////////////////////////////////

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}


	@Override
	public void setId(BigDecimal casId) {
		this.casId = casId;
	}



	public void setRemark(String remark) {
		this.remark = remark;
	}

	
	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	public void setStatus(BigDecimal status) {
		this.status = status;
	}

	public void setStepType(BigDecimal stepType) {
		this.stepType = stepType;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public void setUpdateDate(Date updateDate) {
		this.updateDate = updateDate;
	}

	public void setUpdateDt(String updateDt) {
		this.updateDt = updateDt;
	}
	@Transient
	@Override
	public String getName() {
		// TODO Auto-generated method stub
		return getTitle();
	}
	@Transient
	@Override
	public String getDiy() {
		// TODO Auto-generated method stub
		return getId()+"";
	}
}
